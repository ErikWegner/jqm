'use strict';

var jqmControllers = angular.module('jqmControllers');

jqmControllers.controller('µUserListCtrl', function($scope, $http, µUserDto, µRoleDto, µProfileDto)
{
    $scope.users = null;
    $scope.roles = null;
    $scope.profiles = null;
    $scope.selected = [];
    $scope.minDate = new Date();
    $scope.opened = false;

    $scope.newitem = function()
    {
        var t = new µUserDto({
            login : 'login',
            locked : false,
            expirationDate : (new Date()).addDays(3650),
            creationDate : new Date(),
            freeText : 'user name or service name',
        });
        $scope.users.push(t);
        $scope.usr = t;
    };

    $scope.saveitem = function()
    {
        $scope.usr.$save($scope.refresh);
    };

    $scope.deleteitem = function()
    {
        if ($scope.usr == null)
        {
            return;
        }
        if ($scope.usr.id != undefined)
        {
            $scope.usr.$remove({
                id : $scope.usr.id
            });
        }
        $scope.users.splice($scope.users.indexOf($scope.usr), 1);
        $scope.usr = $scope.users[0];
    };

    $scope.save = function()
    {
        // Save and refresh the table - ID may have been generated by the server.
        µUserDto.saveAll({}, $scope.prms, $scope.refresh);
    };

    $scope.refreshdone = function()
    {
        if ($scope.users.length > 0)
        {
            $scope.usr = $scope.users[0];
        }
        else
        {
            $scope.usr = undefined;
        }
    };

    $scope.refresh = function()
    {
        $scope.selected.length = 0;
        $scope.users = µUserDto.query($scope.refreshdone);
        $scope.roles = µRoleDto.query();
        $scope.profiles = µProfileDto.query();
    };

    $scope.dateOptions = {
        formatYear : 'yy',
        startingDay : 1
    };

    $scope.open = function($event)
    {
        $event.preventDefault();
        $event.stopPropagation();

        $scope.opened = true;
    };
    
    $scope.onAddAssignment = function()
    {
    	var newA = {roleId: $scope.newRole.id, profileId: $scope.newProfile ? $scope.newProfile.id : null};
    	// Avoid doubles
    	var found = false;
    	$.each($scope.usr.roles, function() {
    		if (this.roleId ===  newA.roleId && this.profileId === newA.profileId)
			{
    			found = true;
    			return;
			}
    	});
    	if (found)
		{
    		return;
		}
    	
        $scope.usr.roles.push(newA);
    }
    
    $scope.onRemoveAssignment = function(roleId, profileId)
    {
    	var found = null;
    	$.each($scope.usr.roles, function() {
    		if (this.roleId ===  roleId && this.profileId === profileId)
			{
    			found = this;
    			return;
			}
    	});
    	if (this)
		{
    		$scope.usr.roles.splice($scope.usr.roles.indexOf(found), 1);
		}
    }

    $scope.refresh();
});
